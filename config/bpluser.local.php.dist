<?php

/**
 * 
 * @author Bishwo Prasad Lamichhane <bishwo.prasad@gmail.com>
 */
/**
 * Authentication options
 */
$authenticationOptions = [
    'login_form_timeout' => 300,
    'use_redirect_parameter_if_present' => true,
    'login_redirect_route' => 'bpl-user',
    'logout_redirect_route' => 'home',
    'enable_user_state' => true,
    'allowed_login_states' => [0,1],
    'auto_logout_period' => 1800,
];

/**
 * Email Setting
 */
$emailOptions = [
    'email_from' => 'yourmail@domain',
    'email_from_name' => 'Name',
    'reply_to' => 'reply@domain',
    /**
     * if enabled smtp options will be used
     * otherwise sendmail will be used
     * bool
     */
    'use_smtp' => false,
    /**
     * smtp or google smtp and other options can be provided here
     * if you want to use other mail transports
     * array
     */
    'smtp_options' => [
        'smtp_host' => '',
        'smtp_port' => '',
        'use_smtp_auth' => true,
        'smtp_username' => '',
        'smtp_password' => '',
    ],
    /**
     * Must implement \BplUser\Contract\MailServiceProviderInterface:
     * This option along with extra_mail_options can be used to make your own
     * mail service to notify user after registration and password reset request
     * 
     * @var string
     */
    'mailer_service_factory' => \BplUser\Service\MailService::class,
];

/**
 * forgot password options
 */
$forgotPasswordOptions = [
    /**
     * Reset expire time (seconds)
     *
     * How long will the user be able to reset the password using the token?
     */
    'reset_expire' => 86400,
    'forgot_password_email_template' => 'bpl-user/forgot-password-email-template',
    'forgot_password_email_subject_line' => 'Password Reset Request',
    'forgot_password_entity' => \BplUser\Entity\UserPasswordReset::class,
    'password_reset_mapper' => \BplUser\Mapper\UserPasswordResetMapper::class,
];

/**
 * Form factories for registration and change profile actions
 * This is useful if extra elements is needed for registration
 * 
 * Also provides configurable profile index page for user after login,
 * user identity will be injected into the view template; extra variables 
 * can be added using view plug-in
 */
$profileOptions = [
    'change_profile_form_factory' => \BplUser\Form\ChangeProfile::class,
];

/**
 * Registration options
 * Form factories for registration and change profile actions
 * are useful if extra elements is needed for registration
 */
$registrationOptions = [
    'enable_registration' => true,
    'user_form_timeout' => 300,
    /**
     * An email will be sent to user email address with account activation link
     */
    'enable_email_verification' => true,
    'login_after_registration' => true,
    'use_registration_form_captcha' => true,
    'form_captcha_options' => [
        'class' => 'figlet',
        'width' => 200,
        'height' => 100,
        'expiration' => 600,
        'wordLen' => 4,
    ],
    'default_user_state' => 0, //can be 0 or 1
    'default_user_roles' => [
        'user',
    ],
    'registration_form_factory' => \BplUser\Form\Register::class,
    'registration_email_subject_line' => 'Welcome to my domain',
    'registration_email_template' => 'bpl-user/registration-email-template',
];

//Circlical Module Options

$circlical = [
    'user' => [

            /**
             * Configuration settings for the access service
             */
            'access' => [

                'superadmin' => [

                    /**
                     * Superadmin role name, will be sought in the DB when configured.  Please ensure that your
                     * Role entity with this name exists prior to configuration.
                     */
                    'role_name' => null,

                    /**
                     * If the role was named in config, yet the entity was missing, do we crash and burn?
                     */
                    'throw_exception_when_missing' => false,
                ],
            ],


            /*
             * If you are using Doctrine, you simply to specify the Entity you plan to use. It'll get substituted into
             * the CirclicalUser relationships during Bootstrap.  If you are using Doctrine and want to use
             * the default entities and relationships (recommended) -- this is the only config you need!
             */
            'doctrine' => [
                'entity' => \BplUser\Entity\User::class,
            ],


            /*
             * You can uncomment this to enforce password strength using the Paragon passwdqc implementation.
             * Install the required library with "composer require paragonie/passwdqc", see composer.json for more
             *
             * This will cause the storage and reset flows to throw WeakPasswordExceptions if weak input is passed in.
             */
            //'password_strength_checker' => \CirclicalUser\Service\PasswordChecker\Passwdqc::class,

            // or

            //'password_strength_checker' => [
            //    'implementation' => \CirclicalUser\Service\PasswordChecker\Zxcvbn::class,
            //    'config' => [
            //        'required_strength' => 3,
            //    ],
            //],


            /*
             * Authentication service configuration
             */
            'auth' => [

                /*
                 * A Base64-encoded key, as generated by Halite's key factory
                 * base64_encode( KeyFactory::generateEncryptionKey()->getRawKeyMaterial() );
                 */
                'crypto_key' => 'sfZGFm1rCc7TgPr9aly3WOtAfbEOb/VafB8L3velkd0=',

                /*
                 * Destroy auth cookies when the session ends? (cookie lifespan of 0)
                 */
                'transient' => false,


                /*
                 * Cookies should have the 'secure' flag set to this (accepts bool, or a closure for more advanced discovery)
                 */
                'secure_cookies' => false,

                /*
                 * What SameSite policy do we give cookies?  Can be set to null 'Strict, 'Lax' or 'None'.
                 * Advisory: If the cookie’s attribute SameSite is None the cookie has to be set with flag Secure true.
                 * If the cookie doesn’t have the flag Secure true, the browser ignores the Set-cookie server’s
                 * response header and the cookie is not stored to the browser.
                 */
                'samesite_policy' => 'None',

                /*
                 * Forgot password functionality
                 */
                'password_reset_tokens' => [

                    /*
                     * However you slice it, forgotten password functionality is a back-door; it's unfortunately often necessary. If you set this to 'true',
                     * you will need to configure a reset provider.
                     */
                    'enabled' => false,

                    /*
                     * Validate browser fingerprints during the token verification process
                     */
                    'validate_fingerprint' => true,

                    /*
                     * Make sure that the request IP matches the verification IP
                     */
                    'validate_ip' => false,

                ],
            ],


            /*
             * When a user tries to access a page gated by auth, or rights - what do we do with them?
             * This user module provides a simple 'Redirect' strategy, but you can also roll your own
             */

            'deny_strategy' => [

                /*
                 * The strategy provider, that implements CirclicalUser\Provider\DenyStrategyInterface
                 */
//                'class' => \CirclicalUser\Strategy\RedirectStrategy::class,

                /*
                 * Options specifically required by RedirectStrategy.  You would probably comment this out if you were
                 * to roll your own.
                 */
//                'options' => [
//                    'controller' => \Application\Controller\LoginController::class,
//                    'action' => 'index',
//                    'name' => 'login',
//                ]
            ],


            /*
             * Advanced Config:
             *
             * If you aren't using Doctrine, you have to uncomment and specify your providers below.
             *
             * If conversely, you are using Doctrine you can override default providers by tweaking what lies
             * below.
             *
             */
            'providers' => [

                //
                // Authentication mapper
                // Implements
                //

                'auth' => \CirclicalUser\Mapper\AuthenticationMapper::class,


                //
                // User mapper
                // Implements CirclicalUser\Provider\UserProviderInterface
                //

                'user' => \CirclicalUser\Mapper\UserMapper::class,

                //
                // Role mapper
                // Implements CirclicalUser\Provider\RoleProvider
                //

                'role' => \CirclicalUser\Mapper\RoleMapper::class,


                // Authentication mapper
                // Implements CirclicalUser\Provider\AuthenticationProviderInterface
                //

                'rules' => [

                    //
                    // Group permission mapper
                    // Implements \CirclicalUser\Provider\GroupPermissionProviderInterface
                    //

                    'group' => \CirclicalUser\Mapper\GroupPermissionMapper::class,

                    //
                    // User permission mapper
                    // Implements \CirclicalUser\Provider\UserPermissionProviderInterface

                    'user' => \CirclicalUser\Mapper\UserPermissionMapper::class,

                ],
            ],
        ],
    ],
];

$userAtomKeys = [
    'user-atom-keys' => [
        [
            'keyName' => 'addresss',
            'keyDescrption' => 'Address'
        ],
    ],
];

return [
    'bpl_user' => array_merge(
            $authenticationOptions, $profileOptions, $emailOptions, $forgotPasswordOptions, $registrationOptions
    ),
    'circlical' => $circlical
];
